-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.account_verifications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  bank_account_id uuid NOT NULL,
  user_id uuid NOT NULL,
  verification_method text DEFAULT 'micro_deposits'::text CHECK (verification_method = ANY (ARRAY['micro_deposits'::text, 'instant_verification'::text, 'manual_review'::text])),
  verification_status text DEFAULT 'pending'::text CHECK (verification_status = ANY (ARRAY['pending'::text, 'deposits_sent'::text, 'verified'::text, 'failed'::text, 'expired'::text])),
  micro_deposit_amount_1 numeric,
  micro_deposit_amount_2 numeric,
  verification_code text,
  user_input_amount_1 numeric,
  user_input_amount_2 numeric,
  attempts_remaining integer DEFAULT 3,
  expires_at timestamp with time zone DEFAULT (now() + '7 days'::interval),
  verified_at timestamp with time zone,
  failed_at timestamp with time zone,
  failure_reason text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT account_verifications_pkey PRIMARY KEY (id),
  CONSTRAINT account_verifications_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id),
  CONSTRAINT account_verifications_bank_account_id_fkey FOREIGN KEY (bank_account_id) REFERENCES public.bank_accounts(id)
);
CREATE TABLE public.application_messages (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  application_id uuid NOT NULL,
  sender_id uuid NOT NULL,
  receiver_id uuid NOT NULL,
  message_type text DEFAULT 'text'::text CHECK (message_type = ANY (ARRAY['text'::text, 'interview_invite'::text, 'status_update'::text, 'system_notification'::text])),
  subject text,
  content text NOT NULL,
  is_read boolean DEFAULT false,
  read_at timestamp with time zone,
  attachments jsonb DEFAULT '[]'::jsonb,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT application_messages_pkey PRIMARY KEY (id),
  CONSTRAINT application_messages_receiver_id_fkey FOREIGN KEY (receiver_id) REFERENCES public.profiles(id),
  CONSTRAINT application_messages_sender_id_fkey FOREIGN KEY (sender_id) REFERENCES public.profiles(id),
  CONSTRAINT application_messages_application_id_fkey FOREIGN KEY (application_id) REFERENCES public.gig_applications(id)
);
CREATE TABLE public.application_status_history (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  application_id uuid NOT NULL,
  previous_status text,
  new_status text NOT NULL,
  changed_by uuid NOT NULL,
  change_reason text,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT application_status_history_pkey PRIMARY KEY (id),
  CONSTRAINT application_status_history_changed_by_fkey FOREIGN KEY (changed_by) REFERENCES public.profiles(id),
  CONSTRAINT application_status_history_application_id_fkey FOREIGN KEY (application_id) REFERENCES public.gig_applications(id)
);
CREATE TABLE public.bank_account_transactions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  bank_account_id uuid NOT NULL,
  wallet_transaction_id uuid,
  transaction_type text NOT NULL CHECK (transaction_type = ANY (ARRAY['withdrawal'::text, 'deposit'::text, 'verification_deposit'::text, 'failed_withdrawal'::text])),
  amount numeric NOT NULL CHECK (amount > 0::numeric),
  fee numeric DEFAULT 0.00,
  currency text DEFAULT 'ZAR'::text,
  status text DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'processing'::text, 'completed'::text, 'failed'::text, 'cancelled'::text])),
  reference_number text UNIQUE,
  bank_reference text,
  description text NOT NULL,
  processing_time_hours integer DEFAULT 24,
  scheduled_for timestamp with time zone,
  processed_at timestamp with time zone,
  failed_reason text,
  metadata jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT bank_account_transactions_pkey PRIMARY KEY (id),
  CONSTRAINT bank_account_transactions_wallet_transaction_id_fkey FOREIGN KEY (wallet_transaction_id) REFERENCES public.wallet_transactions(id),
  CONSTRAINT bank_account_transactions_bank_account_id_fkey FOREIGN KEY (bank_account_id) REFERENCES public.bank_accounts(id),
  CONSTRAINT bank_account_transactions_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.bank_accounts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  bank_name text NOT NULL CHECK (bank_name = ANY (ARRAY['Standard Bank'::text, 'FNB'::text, 'ABSA'::text, 'Nedbank'::text, 'Capitec Bank'::text, 'African Bank'::text, 'TymeBank'::text, 'Discovery Bank'::text, 'Investec'::text, 'Bidvest Bank'::text])),
  bank_code text NOT NULL,
  account_number text NOT NULL,
  account_type text NOT NULL CHECK (account_type = ANY (ARRAY['savings'::text, 'cheque'::text, 'current'::text, 'transmission'::text])),
  account_holder_name text NOT NULL,
  branch_name text,
  account_status text DEFAULT 'pending'::text CHECK (account_status = ANY (ARRAY['pending'::text, 'verified'::text, 'failed'::text, 'suspended'::text])),
  is_primary boolean DEFAULT false,
  daily_withdrawal_limit numeric DEFAULT 25000.00,
  monthly_withdrawal_limit numeric DEFAULT 250000.00,
  per_transaction_limit numeric DEFAULT 50000.00,
  auto_verify_enabled boolean DEFAULT true,
  notifications_enabled boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  verified_at timestamp with time zone,
  last_verified_at timestamp with time zone,
  CONSTRAINT bank_accounts_pkey PRIMARY KEY (id),
  CONSTRAINT bank_accounts_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.budget_categories (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  category_name text NOT NULL,
  category_type text DEFAULT 'custom'::text CHECK (category_type = ANY (ARRAY['default'::text, 'custom'::text])),
  monthly_budget numeric NOT NULL DEFAULT 0.00,
  current_spent numeric DEFAULT 0.00,
  currency text DEFAULT 'ZAR'::text,
  color_code text DEFAULT '#1E90FF'::text,
  icon_name text DEFAULT 'wallet'::text,
  is_active boolean DEFAULT true,
  alert_threshold numeric DEFAULT 80.00,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT budget_categories_pkey PRIMARY KEY (id),
  CONSTRAINT budget_categories_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.enhanced_credit_accounts (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  project_id uuid NOT NULL,
  client_id uuid,
  milestone_id uuid,
  payment_amount numeric NOT NULL DEFAULT 0 CHECK (payment_amount >= 0::numeric),
  payment_sequence integer NOT NULL DEFAULT 1 CHECK (payment_sequence > 0),
  total_payments integer NOT NULL DEFAULT 1 CHECK (total_payments > 0),
  total_amount numeric NOT NULL DEFAULT 0 CHECK (total_amount >= 0::numeric),
  next_payment_date date,
  last_payment_date date,
  credit_limit numeric NOT NULL DEFAULT 0,
  used_credit numeric NOT NULL DEFAULT 0,
  available_credit numeric DEFAULT (credit_limit - used_credit),
  interest_rate numeric NOT NULL DEFAULT 0,
  credit_terms text NOT NULL DEFAULT '30 days net'::text,
  credit_status text DEFAULT 'pending'::text CHECK (credit_status = ANY (ARRAY['active'::text, 'suspended'::text, 'closed'::text, 'pending'::text])),
  monthly_payment numeric NOT NULL DEFAULT 0,
  credit_score integer CHECK (credit_score >= 300 AND credit_score <= 850),
  approval_date date NOT NULL DEFAULT CURRENT_DATE,
  expiry_date date NOT NULL DEFAULT (CURRENT_DATE + '1 year'::interval),
  notes text,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT enhanced_credit_accounts_pkey PRIMARY KEY (id),
  CONSTRAINT enhanced_credit_accounts_milestone_id_fkey FOREIGN KEY (milestone_id) REFERENCES public.project_milestones(id),
  CONSTRAINT enhanced_credit_accounts_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id),
  CONSTRAINT enhanced_credit_accounts_client_id_fkey FOREIGN KEY (client_id) REFERENCES public.users(id),
  CONSTRAINT enhanced_credit_accounts_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id)
);
CREATE TABLE public.fraud_alerts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  alert_type text NOT NULL CHECK (alert_type = ANY (ARRAY['unusual_spending'::text, 'new_device'::text, 'location_mismatch'::text, 'large_transaction'::text, 'multiple_failures'::text, 'suspicious_recipient'::text])),
  risk_level text NOT NULL CHECK (risk_level = ANY (ARRAY['low'::text, 'medium'::text, 'high'::text, 'critical'::text])),
  transaction_id uuid,
  description text NOT NULL,
  device_info jsonb,
  location_info jsonb,
  is_resolved boolean DEFAULT false,
  resolution_action text,
  resolved_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT fraud_alerts_pkey PRIMARY KEY (id),
  CONSTRAINT fraud_alerts_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id),
  CONSTRAINT fraud_alerts_transaction_id_fkey FOREIGN KEY (transaction_id) REFERENCES public.wallet_transactions(id)
);
CREATE TABLE public.gig_applications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  gig_post_id uuid NOT NULL,
  applicant_id uuid NOT NULL,
  gig_poster_id uuid NOT NULL,
  application_status text DEFAULT 'pending'::text CHECK (application_status = ANY (ARRAY['pending'::text, 'reviewing'::text, 'shortlisted'::text, 'interviewed'::text, 'accepted'::text, 'rejected'::text, 'withdrawn'::text])),
  cover_letter text NOT NULL,
  expected_rate numeric,
  availability_start date,
  availability_end date,
  experience_years integer DEFAULT 0,
  relevant_skills ARRAY,
  portfolio_links ARRAY,
  attachments jsonb DEFAULT '[]'::jsonb,
  applicant_notes text,
  poster_notes text,
  viewed_by_poster boolean DEFAULT false,
  viewed_at timestamp with time zone,
  responded_at timestamp with time zone,
  interview_scheduled_at timestamp with time zone,
  interview_notes text,
  rating integer CHECK (rating >= 1 AND rating <= 5),
  feedback text,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT gig_applications_pkey PRIMARY KEY (id),
  CONSTRAINT gig_applications_gig_poster_id_fkey FOREIGN KEY (gig_poster_id) REFERENCES public.profiles(id),
  CONSTRAINT gig_applications_gig_post_id_fkey FOREIGN KEY (gig_post_id) REFERENCES public.social_posts(id),
  CONSTRAINT gig_applications_applicant_id_fkey FOREIGN KEY (applicant_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.gig_matches (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  gig_post_id uuid NOT NULL,
  match_score numeric NOT NULL CHECK (match_score >= 0::numeric AND match_score <= 100::numeric),
  match_reasons jsonb DEFAULT '{}'::jsonb,
  component_scores jsonb DEFAULT '{}'::jsonb,
  viewed boolean DEFAULT false,
  applied boolean DEFAULT false,
  dismissed boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  expires_at timestamp with time zone DEFAULT (now() + '7 days'::interval),
  CONSTRAINT gig_matches_pkey PRIMARY KEY (id),
  CONSTRAINT gig_matches_gig_post_id_fkey FOREIGN KEY (gig_post_id) REFERENCES public.social_posts(id),
  CONSTRAINT gig_matches_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.kyc_verifications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  phone_verified boolean DEFAULT false,
  phone_verified_at timestamp with time zone,
  email_verified boolean DEFAULT false,
  email_verified_at timestamp with time zone,
  personal_info_completed boolean DEFAULT false,
  personal_info jsonb,
  id_document_uploaded boolean DEFAULT false,
  id_document_type text CHECK (id_document_type = ANY (ARRAY['passport'::text, 'national_id'::text, 'drivers_license'::text])),
  id_document_url text,
  id_document_verified boolean DEFAULT false,
  id_document_verified_at timestamp with time zone,
  selfie_uploaded boolean DEFAULT false,
  selfie_url text,
  selfie_verified boolean DEFAULT false,
  selfie_verified_at timestamp with time zone,
  kyc_level integer DEFAULT 1 CHECK (kyc_level >= 1 AND kyc_level <= 3),
  verification_status text DEFAULT 'pending'::text CHECK (verification_status = ANY (ARRAY['pending'::text, 'in_review'::text, 'approved'::text, 'rejected'::text])),
  rejection_reason text,
  fraud_check_score integer DEFAULT 0,
  device_fingerprint text,
  ip_risk_score integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT kyc_verifications_pkey PRIMARY KEY (id),
  CONSTRAINT kyc_verifications_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.matching_history (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  gig_post_id uuid NOT NULL,
  match_id uuid,
  action_type text NOT NULL CHECK (action_type = ANY (ARRAY['viewed'::text, 'applied'::text, 'dismissed'::text, 'saved'::text, 'shared'::text])),
  match_score numeric,
  feedback_rating integer CHECK (feedback_rating >= 1 AND feedback_rating <= 5),
  feedback_reason text,
  algorithm_version text DEFAULT 'v1.0'::text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT matching_history_pkey PRIMARY KEY (id),
  CONSTRAINT matching_history_gig_post_id_fkey FOREIGN KEY (gig_post_id) REFERENCES public.social_posts(id),
  CONSTRAINT matching_history_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id),
  CONSTRAINT matching_history_match_id_fkey FOREIGN KEY (match_id) REFERENCES public.gig_matches(id)
);
CREATE TABLE public.notification_preferences (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL UNIQUE,
  push_enabled boolean DEFAULT true,
  email_enabled boolean DEFAULT true,
  sms_enabled boolean DEFAULT false,
  transaction_notifications boolean DEFAULT true,
  budget_alerts boolean DEFAULT true,
  security_alerts boolean DEFAULT true,
  marketing_notifications boolean DEFAULT false,
  remittance_updates boolean DEFAULT true,
  savings_goals_alerts boolean DEFAULT true,
  fraud_alerts boolean DEFAULT true,
  spending_insights boolean DEFAULT true,
  quiet_hours_start time without time zone DEFAULT '22:00:00'::time without time zone,
  quiet_hours_end time without time zone DEFAULT '08:00:00'::time without time zone,
  quiet_hours_enabled boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT notification_preferences_pkey PRIMARY KEY (id),
  CONSTRAINT notification_preferences_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.payment_methods (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  method_type text NOT NULL CHECK (method_type = ANY (ARRAY['card'::text, 'bank_account'::text])),
  provider text NOT NULL,
  last_four text NOT NULL,
  card_brand text,
  bank_name text,
  account_type text,
  is_default boolean DEFAULT false,
  is_verified boolean DEFAULT false,
  stripe_payment_method_id text,
  metadata jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT payment_methods_pkey PRIMARY KEY (id),
  CONSTRAINT payment_methods_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.payments (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  project_id uuid,
  amount numeric NOT NULL,
  payment_date date NOT NULL,
  payment_method character varying NOT NULL,
  reference character varying NOT NULL UNIQUE,
  description text NOT NULL,
  receipt_url text,
  status character varying DEFAULT 'completed'::character varying CHECK (status::text = ANY (ARRAY['pending'::character varying, 'completed'::character varying, 'failed'::character varying, 'refunded'::character varying]::text[])),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT payments_pkey PRIMARY KEY (id),
  CONSTRAINT payments_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id)
);
CREATE TABLE public.portfolio_items (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  title text NOT NULL,
  description text NOT NULL,
  image_url text,
  category text NOT NULL,
  completed_at timestamp with time zone NOT NULL,
  skills jsonb DEFAULT '[]'::jsonb,
  project_url text,
  client_name text,
  is_featured boolean DEFAULT false,
  status text DEFAULT 'published'::text CHECK (status = ANY (ARRAY['draft'::text, 'published'::text, 'archived'::text])),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT portfolio_items_pkey PRIMARY KEY (id),
  CONSTRAINT portfolio_items_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.post_comments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  post_id uuid NOT NULL,
  user_id uuid NOT NULL,
  content text NOT NULL,
  parent_comment_id uuid,
  likes_count integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT post_comments_pkey PRIMARY KEY (id),
  CONSTRAINT post_comments_parent_comment_id_fkey FOREIGN KEY (parent_comment_id) REFERENCES public.post_comments(id),
  CONSTRAINT post_comments_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id),
  CONSTRAINT post_comments_post_id_fkey FOREIGN KEY (post_id) REFERENCES public.social_posts(id)
);
CREATE TABLE public.post_likes (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  post_id uuid NOT NULL,
  user_id uuid NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT post_likes_pkey PRIMARY KEY (id),
  CONSTRAINT post_likes_post_id_fkey FOREIGN KEY (post_id) REFERENCES public.social_posts(id),
  CONSTRAINT post_likes_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.post_shares (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  post_id uuid NOT NULL,
  user_id uuid NOT NULL,
  share_type text DEFAULT 'share'::text CHECK (share_type = ANY (ARRAY['share'::text, 'repost'::text])),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT post_shares_pkey PRIMARY KEY (id),
  CONSTRAINT post_shares_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id),
  CONSTRAINT post_shares_post_id_fkey FOREIGN KEY (post_id) REFERENCES public.social_posts(id)
);
CREATE TABLE public.profiles (
  id uuid NOT NULL,
  full_name text,
  bio text,
  user_role text CHECK (user_role = ANY (ARRAY['gig_seeker'::text, 'gig_poster'::text])),
  avatar_url text,
  updated_at timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  is_kyc_verified boolean DEFAULT false,
  kyc_skipped boolean DEFAULT false,
  phone text,
  skills jsonb,
  interests jsonb,
  profile_completed boolean DEFAULT false,
  role text,
  company_name text,
  description text,
  website text,
  gig_categories text,
  location_coordinates point,
  location_city text,
  location_province text,
  preferred_work_radius_km numeric DEFAULT 25.0,
  hourly_rate_min numeric,
  hourly_rate_max numeric,
  availability jsonb DEFAULT '{"friday": true, "monday": true, "sunday": false, "tuesday": true, "saturday": false, "thursday": true, "wednesday": true}'::jsonb,
  last_active timestamp with time zone DEFAULT now(),
  CONSTRAINT profiles_pkey PRIMARY KEY (id),
  CONSTRAINT profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id)
);
CREATE TABLE public.project_milestones (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  project_id uuid,
  milestone_name character varying NOT NULL,
  description text,
  planned_start date,
  planned_end date,
  actual_start date,
  actual_end date,
  status character varying DEFAULT 'not_started'::character varying CHECK (status::text = ANY (ARRAY['not_started'::character varying, 'in_progress'::character varying, 'completed'::character varying, 'delayed'::character varying]::text[])),
  progress_percentage integer DEFAULT 0 CHECK (progress_percentage >= 0 AND progress_percentage <= 100),
  order_index integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT project_milestones_pkey PRIMARY KEY (id),
  CONSTRAINT project_milestones_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id)
);
CREATE TABLE public.projects (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  client_id uuid,
  project_name character varying NOT NULL,
  project_address text NOT NULL,
  contract_value numeric NOT NULL,
  start_date date NOT NULL,
  expected_completion date NOT NULL,
  actual_completion date,
  current_phase character varying DEFAULT 'Planning'::character varying,
  progress_percentage integer DEFAULT 0 CHECK (progress_percentage >= 0 AND progress_percentage <= 100),
  status character varying DEFAULT 'planning'::character varying CHECK (status::text = ANY (ARRAY['planning'::character varying, 'in_progress'::character varying, 'completed'::character varying, 'on_hold'::character varying, 'cancelled'::character varying]::text[])),
  description text,
  total_milestones integer DEFAULT 0,
  completed_milestones integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT projects_pkey PRIMARY KEY (id),
  CONSTRAINT projects_client_id_fkey FOREIGN KEY (client_id) REFERENCES public.users(id)
);
CREATE TABLE public.qr_payment_codes (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  qr_code_data text NOT NULL UNIQUE,
  amount numeric,
  currency text DEFAULT 'ZAR'::text,
  description text,
  single_use boolean DEFAULT true,
  max_uses integer DEFAULT 1,
  current_uses integer DEFAULT 0,
  expires_at timestamp with time zone,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT qr_payment_codes_pkey PRIMARY KEY (id),
  CONSTRAINT qr_payment_codes_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.remittance_transfers (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  transaction_id uuid NOT NULL,
  provider text NOT NULL CHECK (provider = ANY (ARRAY['western_union'::text, 'moneygram'::text, 'worldremit'::text, 'wise'::text])),
  provider_reference text NOT NULL,
  sender_info jsonb NOT NULL,
  recipient_info jsonb NOT NULL,
  source_currency text DEFAULT 'ZAR'::text,
  target_currency text NOT NULL,
  exchange_rate numeric NOT NULL,
  source_amount numeric NOT NULL,
  target_amount numeric NOT NULL,
  transfer_method text CHECK (transfer_method = ANY (ARRAY['bank_deposit'::text, 'cash_pickup'::text, 'mobile_wallet'::text])),
  pickup_location text,
  tracking_number text UNIQUE,
  estimated_delivery timestamp with time zone,
  delivered_at timestamp with time zone,
  transfer_status text DEFAULT 'pending'::text CHECK (transfer_status = ANY (ARRAY['pending'::text, 'processing'::text, 'sent'::text, 'delivered'::text, 'cancelled'::text, 'failed'::text])),
  cancellation_reason text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT remittance_transfers_pkey PRIMARY KEY (id),
  CONSTRAINT remittance_transfers_transaction_id_fkey FOREIGN KEY (transaction_id) REFERENCES public.wallet_transactions(id),
  CONSTRAINT remittance_transfers_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.savings_goals (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  goal_name text NOT NULL,
  target_amount numeric NOT NULL,
  current_amount numeric DEFAULT 0.00,
  target_date timestamp with time zone,
  auto_save_percentage numeric DEFAULT 0.00,
  auto_save_enabled boolean DEFAULT false,
  round_up_enabled boolean DEFAULT false,
  currency text DEFAULT 'ZAR'::text,
  goal_type text DEFAULT 'general'::text CHECK (goal_type = ANY (ARRAY['emergency'::text, 'vacation'::text, 'general'::text, 'investment'::text])),
  status text DEFAULT 'active'::text CHECK (status = ANY (ARRAY['active'::text, 'paused'::text, 'completed'::text, 'cancelled'::text])),
  color_code text DEFAULT '#32CD32'::text,
  icon_name text DEFAULT 'trophy'::text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  completed_at timestamp with time zone,
  CONSTRAINT savings_goals_pkey PRIMARY KEY (id),
  CONSTRAINT savings_goals_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.skill_embeddings (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  skill_name text NOT NULL UNIQUE,
  embedding_data jsonb,
  category text,
  synonyms ARRAY DEFAULT '{}'::text[],
  usage_count integer DEFAULT 1,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT skill_embeddings_pkey PRIMARY KEY (id)
);
CREATE TABLE public.social_posts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  content text NOT NULL,
  post_type text DEFAULT 'general'::text CHECK (post_type = ANY (ARRAY['general'::text, 'gig_related'::text, 'update'::text, 'question'::text])),
  hashtags ARRAY DEFAULT '{}'::text[],
  status text DEFAULT 'active'::text CHECK (status = ANY (ARRAY['active'::text, 'closed'::text, 'archived'::text])),
  gig_status text CHECK (gig_status = ANY (ARRAY['open'::text, 'closed'::text])),
  likes_count integer DEFAULT 0,
  comments_count integer DEFAULT 0,
  shares_count integer DEFAULT 0,
  image_url text,
  location_name text,
  is_urgent boolean DEFAULT false,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  gig_category text,
  required_skills ARRAY DEFAULT '{}'::text[],
  hourly_rate numeric,
  project_budget numeric,
  duration_hours numeric,
  deadline timestamp with time zone,
  is_remote boolean DEFAULT false,
  location_coordinates point,
  required_experience_years integer DEFAULT 0,
  difficulty_level text DEFAULT 'intermediate'::text CHECK (difficulty_level = ANY (ARRAY['beginner'::text, 'intermediate'::text, 'advanced'::text, 'expert'::text])),
  CONSTRAINT social_posts_pkey PRIMARY KEY (id),
  CONSTRAINT social_posts_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.spending_limits (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  limit_type text NOT NULL CHECK (limit_type = ANY (ARRAY['daily'::text, 'weekly'::text, 'monthly'::text])),
  limit_amount numeric NOT NULL,
  current_spent numeric DEFAULT 0.00,
  period_start timestamp with time zone NOT NULL,
  period_end timestamp with time zone NOT NULL,
  currency text DEFAULT 'ZAR'::text,
  is_active boolean DEFAULT true,
  alert_sent boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT spending_limits_pkey PRIMARY KEY (id),
  CONSTRAINT spending_limits_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.user_matching_preferences (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL UNIQUE,
  max_distance_km numeric DEFAULT 50.0,
  min_hourly_rate numeric DEFAULT 100.0,
  max_hourly_rate numeric DEFAULT 5000.0,
  preferred_categories ARRAY DEFAULT '{}'::text[],
  availability_days ARRAY DEFAULT '{monday,tuesday,wednesday,thursday,friday,saturday,sunday}'::text[],
  availability_hours jsonb DEFAULT '{"end": "18:00", "start": "08:00"}'::jsonb,
  remote_work_preference text DEFAULT 'both'::text CHECK (remote_work_preference = ANY (ARRAY['remote_only'::text, 'in_person_only'::text, 'both'::text])),
  urgency_preference text DEFAULT 'both'::text CHECK (urgency_preference = ANY (ARRAY['urgent_only'::text, 'non_urgent_only'::text, 'both'::text])),
  skill_weight numeric DEFAULT 40.0 CHECK (skill_weight >= 0::numeric AND skill_weight <= 100::numeric),
  location_weight numeric DEFAULT 25.0 CHECK (location_weight >= 0::numeric AND location_weight <= 100::numeric),
  price_weight numeric DEFAULT 15.0 CHECK (price_weight >= 0::numeric AND price_weight <= 100::numeric),
  availability_weight numeric DEFAULT 10.0 CHECK (availability_weight >= 0::numeric AND availability_weight <= 100::numeric),
  ai_enhancement_weight numeric DEFAULT 10.0 CHECK (ai_enhancement_weight >= 0::numeric AND ai_enhancement_weight <= 100::numeric),
  notification_enabled boolean DEFAULT true,
  auto_apply_threshold numeric DEFAULT 95.0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_matching_preferences_pkey PRIMARY KEY (id),
  CONSTRAINT user_matching_preferences_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.users (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  email character varying NOT NULL UNIQUE,
  full_name character varying NOT NULL,
  phone character varying,
  role character varying DEFAULT 'client'::character varying CHECK (role::text = ANY (ARRAY['client'::character varying, 'admin'::character varying, 'contractor'::character varying]::text[])),
  profile_photo_url text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT users_pkey PRIMARY KEY (id)
);
CREATE TABLE public.virtual_cards (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  wallet_id uuid NOT NULL,
  card_number text NOT NULL,
  card_holder_name text NOT NULL,
  expiry_month integer NOT NULL CHECK (expiry_month >= 1 AND expiry_month <= 12),
  expiry_year integer NOT NULL CHECK (expiry_year::numeric >= EXTRACT(year FROM CURRENT_DATE)),
  cvv text NOT NULL,
  card_type text DEFAULT 'visa'::text CHECK (card_type = ANY (ARRAY['visa'::text, 'mastercard'::text])),
  card_status text DEFAULT 'active'::text CHECK (card_status = ANY (ARRAY['active'::text, 'frozen'::text, 'cancelled'::text])),
  spending_limit_daily numeric DEFAULT 10000.00,
  spending_limit_monthly numeric DEFAULT 100000.00,
  online_purchases_enabled boolean DEFAULT true,
  contactless_enabled boolean DEFAULT true,
  international_enabled boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT virtual_cards_pkey PRIMARY KEY (id),
  CONSTRAINT virtual_cards_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id),
  CONSTRAINT virtual_cards_wallet_id_fkey FOREIGN KEY (wallet_id) REFERENCES public.wallet_accounts(id)
);
CREATE TABLE public.wallet_accounts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL UNIQUE,
  wallet_address text NOT NULL UNIQUE,
  balance_available numeric DEFAULT 0.00,
  balance_pending numeric DEFAULT 0.00,
  balance_escrowed numeric DEFAULT 0.00,
  currency text DEFAULT 'ZAR'::text CHECK (currency = ANY (ARRAY['ZAR'::text, 'USD'::text, 'EUR'::text, 'GBP'::text])),
  daily_limit numeric DEFAULT 50000.00,
  monthly_limit numeric DEFAULT 500000.00,
  per_transaction_limit numeric DEFAULT 25000.00,
  auto_savings_enabled boolean DEFAULT false,
  auto_savings_percentage numeric DEFAULT 0.00,
  wallet_pin_hash text,
  biometric_enabled boolean DEFAULT false,
  two_factor_enabled boolean DEFAULT false,
  wallet_status text DEFAULT 'active'::text CHECK (wallet_status = ANY (ARRAY['active'::text, 'suspended'::text, 'closed'::text])),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT wallet_accounts_pkey PRIMARY KEY (id),
  CONSTRAINT wallet_accounts_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.wallet_insights (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  insight_type text NOT NULL CHECK (insight_type = ANY (ARRAY['spending_pattern'::text, 'savings_opportunity'::text, 'budget_recommendation'::text, 'category_analysis'::text, 'goal_progress'::text, 'cost_optimization'::text])),
  insight_title text NOT NULL,
  insight_description text NOT NULL,
  insight_data jsonb DEFAULT '{}'::jsonb,
  actionable_recommendation text,
  is_viewed boolean DEFAULT false,
  priority text DEFAULT 'normal'::text CHECK (priority = ANY (ARRAY['low'::text, 'normal'::text, 'high'::text])),
  expires_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  viewed_at timestamp with time zone,
  CONSTRAINT wallet_insights_pkey PRIMARY KEY (id),
  CONSTRAINT wallet_insights_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.wallet_notifications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  notification_type text NOT NULL CHECK (notification_type = ANY (ARRAY['transaction_completed'::text, 'transaction_received'::text, 'budget_limit_reached'::text, 'spending_limit_warning'::text, 'savings_goal_reached'::text, 'fraud_alert'::text, 'remittance_status'::text, 'security_alert'::text, 'recommendation'::text, 'low_balance'::text])),
  title text NOT NULL,
  message text NOT NULL,
  transaction_id uuid,
  category text,
  amount numeric,
  is_read boolean DEFAULT false,
  is_push_sent boolean DEFAULT false,
  priority text DEFAULT 'normal'::text CHECK (priority = ANY (ARRAY['low'::text, 'normal'::text, 'high'::text, 'urgent'::text])),
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  read_at timestamp with time zone,
  CONSTRAINT wallet_notifications_pkey PRIMARY KEY (id),
  CONSTRAINT wallet_notifications_transaction_id_fkey FOREIGN KEY (transaction_id) REFERENCES public.wallet_transactions(id),
  CONSTRAINT wallet_notifications_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.wallet_settings (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL UNIQUE,
  notification_preferences jsonb DEFAULT '{"promotional": false, "security_alerts": true, "transaction_alerts": true}'::jsonb,
  spending_categories jsonb DEFAULT '{"food": 0, "gigs": 0, "other": 0, "transport": 0}'::jsonb,
  budget_limits jsonb DEFAULT '{"daily": 1000, "weekly": 5000, "monthly": 20000}'::jsonb,
  auto_save_enabled boolean DEFAULT false,
  auto_save_percentage numeric DEFAULT 0.00,
  round_up_savings boolean DEFAULT false,
  preferred_currency text DEFAULT 'ZAR'::text,
  security_preferences jsonb DEFAULT '{"session_timeout": 300, "require_biometric": false, "require_pin_for_transfers": true}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT wallet_settings_pkey PRIMARY KEY (id),
  CONSTRAINT wallet_settings_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.wallet_transactions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  wallet_id uuid NOT NULL,
  transaction_type text NOT NULL CHECK (transaction_type = ANY (ARRAY['deposit'::text, 'withdrawal'::text, 'transfer_sent'::text, 'transfer_received'::text, 'gig_payment'::text, 'escrow_lock'::text, 'escrow_release'::text, 'card_payment'::text, 'remittance_sent'::text, 'remittance_received'::text, 'fee'::text, 'refund'::text])),
  amount numeric NOT NULL,
  fee numeric DEFAULT 0.00,
  currency text DEFAULT 'ZAR'::text,
  status text DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'completed'::text, 'failed'::text, 'cancelled'::text])),
  description text NOT NULL,
  reference_number text UNIQUE,
  external_reference text,
  recipient_user_id uuid,
  recipient_wallet_address text,
  payment_method_id uuid,
  virtual_card_id uuid,
  gig_id uuid,
  metadata jsonb,
  processed_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT wallet_transactions_pkey PRIMARY KEY (id),
  CONSTRAINT wallet_transactions_wallet_id_fkey FOREIGN KEY (wallet_id) REFERENCES public.wallet_accounts(id),
  CONSTRAINT wallet_transactions_virtual_card_id_fkey FOREIGN KEY (virtual_card_id) REFERENCES public.virtual_cards(id),
  CONSTRAINT wallet_transactions_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id),
  CONSTRAINT wallet_transactions_payment_method_id_fkey FOREIGN KEY (payment_method_id) REFERENCES public.payment_methods(id),
  CONSTRAINT wallet_transactions_recipient_user_id_fkey FOREIGN KEY (recipient_user_id) REFERENCES public.profiles(id)
);